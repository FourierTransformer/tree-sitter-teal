==============================
Anonymous
==============================

local foo = function()
end

---

(program
  (var_declaration (var (identifier))
  (anon_function (signature) (body))))

==============================
Named
==============================

local function foo()
end

---

(program
  (function_statement (name) (signature) (body)))

==============================
A function that actually does something
==============================

local function bar()
   local x = 3
   local y = {
      z = function()
         local x = 1
      end,
      w = function()
      end,
   }
end

---

(program
  (function_statement (name) (signature) (body
    (var_declaration (var (identifier)) (number))
    (var_declaration (var (identifier)) (table_constructor
      (table_key) (table_value (anon_function (signature) (body
        (var_declaration (var (identifier)) (number)))))
      (table_key) (table_value (anon_function (signature) (body))))))))


==============================
A function that returns
==============================

local function bar()
   local x = "hello"
   return x
end

---

(program
  (function_statement (name) (signature) (body
    (var_declaration (var (identifier)) (string))
    (return_statement (identifier)))))


==============================
A function with args
==============================

local function foo(bar, baz)
   return bar, baz
end

---

(program 
  (function_statement (name)
    (signature
      (arguments (arg) (arg)))
    (body
      (return_statement (identifier) (identifier)))))

==============================
A function with typed args
==============================

local function foo(bar: string, baz: number)
   return bar, baz
end

---

(program 
  (function_statement
    (name)
    (signature
      (arguments
        (arg (simple_type))
        (arg (simple_type))))
    (body
      (return_statement (identifier) (identifier)))))

==============================
A function with typed returns
==============================

local function foo(): string, number
end

---

(program 
  (function_statement (name) (signature
  (return_type (simple_type) (simple_type))) (body)))

==============================
A function in a table/record
==============================

function foo.bar()
end

---

(program 
  (function_statement (name (base) (entry)) (signature) (body)))

==============================
A method in a table/record
==============================

function foo:bar()
end

---

(program 
  (function_statement
    (name (base) (method))
    (signature) (body)))

==============================
Argument with typearg
==============================

local function parse_list<T>(ps: ParseState, i: number, list: {T}, close: {string:boolean}, sep: SeparatorMode, parse_item: ParseItem<T>): number, {T}
end

---

(program (function_statement (name)
  (signature
    (typeargs (identifier))
    (arguments
      (arg (simple_type))
      (arg (simple_type))
      (arg (table_type
        value_type: (simple_type)))
      (arg (table_type
        key_type: (simple_type)
        value_type: (simple_type)))
      (arg (simple_type))
      (arg (simple_type (typeargs (identifier)))))
    (return_type (simple_type) (table_type value_type: (simple_type))))
  (body)))

