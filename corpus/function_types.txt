==============================
No args, no returns
==============================

local foo: function()

---

(program 
  (var_declaration (identifier) (type_annotation (function_type))))

==============================
One arg, no returns
==============================

local foo: function(string)

---

(program 
  (var_declaration (identifier)
    (type_annotation (function_type
       arg_type: (simple_type (identifier))))))

==============================
No args, one return
==============================

local foo: function(): string

---

(program 
  (var_declaration (identifier)
    (type_annotation (function_type
      ret_type: (simple_type (identifier))))))

==============================
One arg, one return
==============================

local foo: function(number): string

---

(program 
  (var_declaration (identifier)
    (type_annotation (function_type
      arg_type: (simple_type (identifier))
      ret_type: (simple_type (identifier))))))

==============================
Multiple args, no return
==============================

local foo: function(number, {string}, string)

---

(program 
  (var_declaration (identifier)
    (type_annotation (function_type
      arg_type: (simple_type (identifier))
      arg_type: (table_type (simple_type (identifier)))
      arg_type: (simple_type (identifier))))))

==============================
No args, multiple returns
==============================

local foo: function(): string, {number}, number, thread

---

(program 
  (var_declaration (identifier)
    (type_annotation (function_type
      ret_type: (simple_type (identifier))
      ret_type: (table_type (simple_type (identifier)))
      ret_type: (simple_type (identifier))
      ret_type: (simple_type (identifier))))))

==============================
Multiple args, multiple returns
==============================

local foo: function(number, {string}, string): string, {number}, number, thread

---

(program 
  (var_declaration (identifier)
    (type_annotation (function_type
      arg_type: (simple_type (identifier))
      arg_type: (table_type (simple_type (identifier)))
      arg_type: (simple_type (identifier))
      ret_type: (simple_type (identifier))
      ret_type: (table_type (simple_type (identifier)))
      ret_type: (simple_type (identifier))
      ret_type: (simple_type (identifier))))))
