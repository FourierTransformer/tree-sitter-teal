
==============================
Empty
==============================

local t = {}

---

(program
  (var_declaration (var (identifier)) (table_constructor)))

==============================
Array
==============================

local arr = {1, 2, 3}

---

(program
  (var_declaration (var (identifier))
                   (table_constructor
                     (table_entry value: (number))
                     (table_entry value: (number))
                     (table_entry value: (number)))))

==============================
Identifier-Map
==============================

local arr = {
  x = 5,
  y = 6,
}

---

(program
  (var_declaration (var (identifier))
    (table_constructor
      (table_entry
        key: (identifier)
        value: (number))
      (table_entry
        key: (identifier)
        value: (number)))))

==============================
Value-Map
==============================

local arr = {
  ["x"] = 5,
  [y] = 6,
}

---

(program
  (var_declaration (var (identifier))
    (table_constructor
      (table_entry
        expr_key: (string)
        value: (number))
      (table_entry
        expr_key: (identifier)
        value: (number)))))

==============================
Nested
==============================

local arr = {
    foo = {
        bar = "a",
        baz = "b",
    },
    [{}] = {};
}

---

(program
  (var_declaration
    (var (identifier))
    (table_constructor
      (table_entry
        key: (identifier)
        value: (table_constructor
                 (table_entry
                   key: (identifier)
                   value: (string))
                 (table_entry
                   key: (identifier)
                   value: (string))))
      (table_entry
        expr_key: (table_constructor)
        value: (table_constructor)))))

==============================
With type annotations
==============================

local tl = {
   process: function(string, Env, Result, {string}): (Result, string) = nil,
}

---

(program
  (var_declaration
    (var (identifier))
    (table_constructor
      (table_entry
        key: (identifier)
        type: (function_type
                (arguments
                  (arg type: (simple_type))
                  (arg type: (simple_type))
                  (arg type: (simple_type))
                  (arg type: (table_type value_type: (simple_type))))
                (return_type (simple_type) (simple_type)))
        value: (nil)))))

