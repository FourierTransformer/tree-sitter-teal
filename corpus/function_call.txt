
==============================
Basic call
==============================

print("hello world")

---

(program (function_call
   (identifier) (arguments (string))))

==============================
Multiple arguments
==============================

print(a, b)

---

(program (function_call
  (identifier)
  (arguments (identifier) (identifier))))

==============================
Basic single string arg
==============================

print "hello world"

---

(program (function_call
  (identifier)
  (arguments (string))))

==============================
Basic single table arg
==============================

print {}

---

(program (function_call
  (identifier)
  (arguments (table_constructor))))

==============================
Call table entry
==============================

foo.bar()

---

(program (function_call
  (index (identifier) (identifier)) (arguments)))

==============================
Call table entry of table entry
==============================

foo.bar.baz()

---

(program (function_call
  (index (index (identifier) (identifier)) (identifier)) (arguments)))

==============================
Higher order calls
==============================

func_that_returns_func()()

---

(program (function_call (function_call (identifier) (arguments)) (arguments)))

==============================
More higher order calls
==============================

func_that_returns_func()()()()()()()

---

(program (function_call
  (function_call
    (function_call
      (function_call
        (function_call
          (function_call
            (function_call (identifier) (arguments))
            (arguments))
            (arguments))
            (arguments))
            (arguments))
            (arguments))
            (arguments)))

==============================
Even more higher order calls
==============================

func_that_returns_func "hello" "world" "foo" "bar"

---

(program
  (function_call
    (function_call
      (function_call 
        (function_call (identifier)
          (arguments (string)))
            (arguments (string)))
              (arguments (string)))
                (arguments (string))))

==============================
You get the idea
==============================

func_that_returns_func "hello" { this = "is" } "getting" "silly"

---

(program
  (function_call
    (function_call
      (function_call
        (function_call (identifier) (arguments (string)))
            (arguments (table_constructor (table_key) (table_value (string)))))
              (arguments (string)))
                (arguments (string))))
